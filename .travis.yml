language: c

os:
    - linux

sudo: false

env:
    global:
        # Set defaults to avoid repeating in most cases
        - NUMPY_VERSION=1.9
        - MAIN_CMD='python setup.py'
        - CONDA_DEPENDENCIES='Cython jinja2'
        - CONDA_ALL_DEPENDENCIES='pip numpy scipy matplotlib mock requests pyzmq msgpack setuptools gdal rasterio'
        - PIP_DEPENDENCIES=''

matrix:
  include:
    - os: linux
      env: PYTHON_VERSION=2.6 SETUP_CMD='test --open-files'
    - os: linux
      env: PYTHON_VERSION=2.7 SETUP_CMD='test --open-files'
    - os: linux
      env: PYTHON_VERSION=3.3 SETUP_CMD='test --open-files'
    - os: linux
      env: PYTHON_VERSION=3.4 SETUP_CMD='test --open-files'
    - os: linux
      env: PYTHON_VERSION=3.5 SETUP_CMD='test --open-files'


install:
  # See:
  # https://groups.google.com/a/continuum.io/forum/#!topic/conda/RSFENqovnro
  # - conda update --yes --no-deps conda
  # OK, this used to *fix* the build, but now it *breaks* the build.
  # If you're reading this, good luck out there. I'm not sure what to tell you.
  - conda create --yes -n testenv python=$PYTHON_VERSION
  - conda install --yes -n testenv pip numpy scipy matplotlib mock requests pyzmq setuptools gdal rasterio
  - source activate testenv
  - pip install future
  - pip install codecov
  # for debugging...
  - echo $PATH
  - which python
  - conda info
  - conda list
  - python setup.py install

before_install:
  - if [ ${PYTHON_VERSION:0:1} == "2" ]; then wget http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-x86_64.sh -O miniconda.sh; else wget http://repo.continuum.io/miniconda/Miniconda3-3.5.5-Linux-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p /home/travis/miniconda
  - export PATH=/home/travis/miniconda/bin:$PATH
  - conda update --yes conda


  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  # - rm -rf /dev/shm
  # - ln -s /run/shm /dev/shm

# command to run tsts, e.g. python setup.py test
script:
    - python setup.py test
    #- py.test -v --color=yes --exitfirst --showlocals --durations=5

#script:
#     - py.test -v --color=yes --exitfirst --showlocals --durations=5


#addons:
#  apt:
#    packages:
#    - scipy

after_success:
  - codecov

# After you create the Github repo and add it to Travis, run the
# travis_pypi_setup.py script to finish PyPI deployment setup
deploy:
  provider: pypi
  distributions: sdist bdist_wheel
  user: friend0
  password:
    secure: PLEASE_REPLACE_ME
  on:
    tags: true
    repo: friend0/tower
    condition: $TOXENV == py27